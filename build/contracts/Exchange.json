{
  "contractName": "Exchange",
  "abi": [
    {
      "inputs": [],
      "name": "EBTBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "ethVault",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "exchangeRate",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [],
      "name": "makeExchange",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EBTBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ethVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"makeExchange\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/sbren/Documents/code/learning-solidity/erc20-basic-token/contracts/Exchange.sol\":\"Exchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sbren/Documents/code/learning-solidity/erc20-basic-token/contracts/Exchange.sol\":{\"keccak256\":\"0xfabfd83d57f3e7286d40582e0481f422c75b501a34eb27a8da877c71d563a2b3\",\"urls\":[\"bzz-raw://bbd0ef2af31290082b6fcc42ca075dfe3ba9cccf78ff15ad670503408fcac313\",\"dweb:/ipfs/QmXfrjTMB34FtYUu4ErrVyUSdYAvi8XkNW9XYFJiigyh7s\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061023a806100206000396000f3fe6080604052600436106100435760003560e01c80633ba0b9a91461004f5780635a20329c1461007a578063b1baf546146100a5578063b35cec16146100d05761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100da565b604051610071919061014d565b60405180910390f35b34801561008657600080fd5b5061008f6100ed565b60405161009c9190610132565b60405180910390f35b3480156100b157600080fd5b506100ba6100f3565b6040516100c79190610132565b60405180910390f35b6100d86100f9565b005b600160009054906101000a900460ff1681565b60025481565b60005481565b346002600082825461010b9190610168565b92505081905550565b61011d816101be565b82525050565b61012c816101c8565b82525050565b60006020820190506101476000830184610114565b92915050565b60006020820190506101626000830184610123565b92915050565b6000610173826101be565b915061017e836101be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101b3576101b26101d5565b5b828201905092915050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122046c9bf8916fd23abfa5ddc06e3652d2bb276c3b8dbf5da80a573fa9a86577e6764736f6c63430008010033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80633ba0b9a91461004f5780635a20329c1461007a578063b1baf546146100a5578063b35cec16146100d05761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b506100646100da565b604051610071919061014d565b60405180910390f35b34801561008657600080fd5b5061008f6100ed565b60405161009c9190610132565b60405180910390f35b3480156100b157600080fd5b506100ba6100f3565b6040516100c79190610132565b60405180910390f35b6100d86100f9565b005b600160009054906101000a900460ff1681565b60025481565b60005481565b346002600082825461010b9190610168565b92505081905550565b61011d816101be565b82525050565b61012c816101c8565b82525050565b60006020820190506101476000830184610114565b92915050565b60006020820190506101626000830184610123565b92915050565b6000610173826101be565b915061017e836101be565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101b3576101b26101d5565b5b828201905092915050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea264697066735822122046c9bf8916fd23abfa5ddc06e3652d2bb276c3b8dbf5da80a573fa9a86577e6764736f6c63430008010033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1366:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:1",
                "type": ""
              }
            ],
            "src": "7:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "192:51:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "209:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "230:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "214:15:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:22:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "202:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "202:35:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "202:35:1"
                }
              ]
            },
            "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "180:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "187:3:1",
                "type": ""
              }
            ],
            "src": "131:112:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "357:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "369:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "380:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "365:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "365:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "357:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "437:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "450:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "461:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "446:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "446:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "393:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "393:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "319:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "331:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "342:4:1",
                "type": ""
              }
            ],
            "src": "249:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "571:120:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "581:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "604:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "589:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "589:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "581:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "657:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "670:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "681:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "666:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "666:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "617:39:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:67:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "617:67:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "543:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "555:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "566:4:1",
                "type": ""
              }
            ],
            "src": "477:214:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:261:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "751:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "774:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "756:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "751:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "785:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "808:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "790:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "790:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "785:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "948:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "950:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "950:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "950:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "869:1:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "876:66:1",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "944:1:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "872:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "872:74:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "866:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:81:1"
                  },
                  "nodeType": "YulIf",
                  "src": "863:2:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "980:16:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "991:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "994:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "987:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "987:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "728:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "731:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "737:3:1",
                "type": ""
              }
            ],
            "src": "697:305:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1053:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1063:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1074:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1063:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1035:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1045:7:1",
                "type": ""
              }
            ],
            "src": "1008:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1134:43:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1144:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1159:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1166:4:1",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1155:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:16:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1144:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1116:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1126:7:1",
                "type": ""
              }
            ],
            "src": "1091:86:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1211:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1228:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1231:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1221:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1221:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1221:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1325:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1328:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1318:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1318:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1318:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1349:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1352:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1342:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1183:180:1"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "25:274:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "25:274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;80:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;145:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;49:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:77;;;:::i;:::-;;80:25;;;;;;;;;;;;;:::o;145:23::-;;;;:::o;49:25::-;;;;:::o;220:77::-;281:9;269:8;;:21;;;;;;;:::i;:::-;;;;;;;;220:77::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:112::-;214:22;230:5;214:22;:::i;:::-;209:3;202:35;192:51;;:::o;249:222::-;;380:2;369:9;365:18;357:26;;393:71;461:1;450:9;446:17;437:6;393:71;:::i;:::-;347:124;;;;:::o;477:214::-;;604:2;593:9;589:18;581:26;;617:67;681:1;670:9;666:17;657:6;617:67;:::i;:::-;571:120;;;;:::o;697:305::-;;756:20;774:1;756:20;:::i;:::-;751:25;;790:20;808:1;790:20;:::i;:::-;785:25;;944:1;876:66;872:74;869:1;866:81;863:2;;;950:18;;:::i;:::-;863:2;994:1;991;987:9;980:16;;741:261;;;;:::o;1008:77::-;;1074:5;1063:16;;1053:32;;;:::o;1091:86::-;;1166:4;1159:5;1155:16;1144:27;;1134:43;;;:::o;1183:180::-;1231:77;1228:1;1221:88;1328:4;1325:1;1318:15;1352:4;1349:1;1342:15",
  "source": "pragma solidity ^0.8.0;\n\ncontract Exchange {\n    uint256 public EBTBalance;\n    uint8 public exchangeRate; // How many EBT you get for 1 ETH\n    uint256 public ethVault;\n\n    receive() external payable {\n\n    }\n    \n    function makeExchange() public payable {\n        ethVault += msg.value;\n    }\n}",
  "sourcePath": "/Users/sbren/Documents/code/learning-solidity/erc20-basic-token/contracts/Exchange.sol",
  "ast": {
    "absolutePath": "/Users/sbren/Documents/code/learning-solidity/erc20-basic-token/contracts/Exchange.sol",
    "exportedSymbols": {
      "Exchange": [
        21
      ]
    },
    "id": 22,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "Exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b1baf546",
            "id": 3,
            "mutability": "mutable",
            "name": "EBTBalance",
            "nodeType": "VariableDeclaration",
            "scope": 21,
            "src": "49:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "49:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3ba0b9a9",
            "id": 5,
            "mutability": "mutable",
            "name": "exchangeRate",
            "nodeType": "VariableDeclaration",
            "scope": 21,
            "src": "80:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "80:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a20329c",
            "id": 7,
            "mutability": "mutable",
            "name": "ethVault",
            "nodeType": "VariableDeclaration",
            "scope": 21,
            "src": "145:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "145:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10,
              "nodeType": "Block",
              "src": "202:8:0",
              "statements": []
            },
            "id": 11,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:0:0"
            },
            "scope": 21,
            "src": "175:35:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "259:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14,
                      "name": "ethVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "269:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "281:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "281:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "269:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "269:21:0"
                }
              ]
            },
            "functionSelector": "b35cec16",
            "id": 20,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:0"
            },
            "scope": 21,
            "src": "220:77:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 22,
        "src": "25:274:0"
      }
    ],
    "src": "0:299:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/sbren/Documents/code/learning-solidity/erc20-basic-token/contracts/Exchange.sol",
    "exportedSymbols": {
      "Exchange": [
        21
      ]
    },
    "id": 22,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21,
        "linearizedBaseContracts": [
          21
        ],
        "name": "Exchange",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b1baf546",
            "id": 3,
            "mutability": "mutable",
            "name": "EBTBalance",
            "nodeType": "VariableDeclaration",
            "scope": 21,
            "src": "49:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "49:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3ba0b9a9",
            "id": 5,
            "mutability": "mutable",
            "name": "exchangeRate",
            "nodeType": "VariableDeclaration",
            "scope": 21,
            "src": "80:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "80:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a20329c",
            "id": 7,
            "mutability": "mutable",
            "name": "ethVault",
            "nodeType": "VariableDeclaration",
            "scope": 21,
            "src": "145:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "145:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10,
              "nodeType": "Block",
              "src": "202:8:0",
              "statements": []
            },
            "id": 11,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:0:0"
            },
            "scope": 21,
            "src": "175:35:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19,
              "nodeType": "Block",
              "src": "259:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 14,
                      "name": "ethVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "269:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "281:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 16,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "281:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "269:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18,
                  "nodeType": "ExpressionStatement",
                  "src": "269:21:0"
                }
              ]
            },
            "functionSelector": "b35cec16",
            "id": 20,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:0"
            },
            "scope": 21,
            "src": "220:77:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 22,
        "src": "25:274:0"
      }
    ],
    "src": "0:299:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.1+commit.df193b15.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x2A3b05cd23A8Bc923c9c036dE01c099975b364Ed",
      "transactionHash": "0xc0032e9055a7765a49326af933496d2fd9e4984a87b82feadc32ed518ce2f70d"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-05-25T19:30:08.908Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}